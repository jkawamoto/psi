<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ψ: Privacy-Preserving Stream Integration</title>
    <link>https://jkawamoto.github.io/psi/</link>
    <description>Recent content on ψ: Privacy-Preserving Stream Integration</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Mar 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jkawamoto.github.io/psi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Privacy-Preserving Stream Integration</title>
      <link>https://jkawamoto.github.io/psi/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/psi/</guid>
      <description>Introduction This software is a set of Node-RED nodes which provides a privacy preserving stream integration algorithm. There are several sensors in several places and you want to integrate data from such sensors in a cloud server; but you, at the same time, need to consider privacy of those sensor data.
For example, you put sensors in each room of customers&amp;rsquo; houses and want to get power usage of each room in order to analyze usage patterns and provide a useful service such as consulting to reduce electric bill.</description>
    </item>
    
    <item>
      <title>Node-RED nodes</title>
      <link>https://jkawamoto.github.io/psi/nodes/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/psi/nodes/</guid>
      <description>Summary This software includes seven Node-RED nodes; a Node-RED node provides some of functions such as receiving data from a data source, modifying data, and sending data to other servers.
The following is a brief description of Node-RED nodes this software provides:
 dft: providing top-k Discrete Fourier Transformation, dlpa: providing Distributed Laplace Perturbation Algorithm (DLPA) which is one of the main algorithm of PASTE. fluentd-parser: parsing messages from Fluentd, fplug-splitter: splitting messages from fplug-logger into four messages so that each message has only one sensor value, guard: waiting to send message until it receives messages from all topics, local-sum: aggregating topics and computing summation of those values, rgen: generating a random value every 10 second to test other nodes.</description>
    </item>
    
  </channel>
</rss>