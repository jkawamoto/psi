# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import dlpanode.dlpanode_pb2 as dlpanode_dot_dlpanode__pb2


class DLPAClientStub(object):
  """DLPAClient defines a servcie of the distributed Laplace Perturbation
  Algorithm (DLPA) client.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.EncryptNoisySum = channel.unary_unary(
        '/dlpanode.DLPAClient/EncryptNoisySum',
        request_serializer=dlpanode_dot_dlpanode__pb2.Matrix.SerializeToString,
        response_deserializer=dlpanode_dot_dlpanode__pb2.NoResponse.FromString,
        )


class DLPAClientServicer(object):
  """DLPAClient defines a servcie of the distributed Laplace Perturbation
  Algorithm (DLPA) client.
  """

  def EncryptNoisySum(self, request, context):
    """EncryptNoisySum is the method to send a matrix using Encrypt-Noisy-Sum
    protocol.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DLPAClientServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'EncryptNoisySum': grpc.unary_unary_rpc_method_handler(
          servicer.EncryptNoisySum,
          request_deserializer=dlpanode_dot_dlpanode__pb2.Matrix.FromString,
          response_serializer=dlpanode_dot_dlpanode__pb2.NoResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dlpanode.DLPAClient', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
